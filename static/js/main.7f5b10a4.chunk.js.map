{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/Card.module.css","components/UI/LoadingSpinner.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js","components/UI/Card.js","components/UI/LoadingSpinner.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFoundPage.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","history","useHistory","location","useLocation","console","log","quotes","ascending","isSortingAscending","URLSearchParams","search","get","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","DUMMY_DATA","AllQuotes","Card","card","children","LoadingSpinner","spinner","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","onFocus","isLoading","loading","control","htmlFor","type","ref","rows","actions","NewQuote","NewCommentForm","commentTextRef","submitFormHandler","Comments","isAddingComment","setIsAddingComment","comments","HighlightedQuote","QuoteDetails","params","useParams","find","quotaId","auhtor","path","exact","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFoundPage","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f5b10a4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__Vq42m\",\"loading\":\"QuoteForm_loading__3004P\",\"control\":\"QuoteForm_control__1dQzd\",\"actions\":\"QuoteForm_actions__mROy4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__1OGuA\",\"logo\":\"MainNavigation_logo__3jPFj\",\"nav\":\"MainNavigation_nav__I4StR\",\"active\":\"MainNavigation_active__13opN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__b5LYV\",\"loading\":\"NewCommentForm_loading__2dzFy\",\"control\":\"NewCommentForm_control__3OYYT\",\"actions\":\"NewCommentForm_actions__3RM55\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3btJ-\",\"sorting\":\"QuoteList_sorting__2PPiO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2P_N8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3Ybid\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2gQah\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__2HRjS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__QSMeE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__G_iM-\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\n\n\n\n\n  const sortQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA, quoteB) => {\n      if (ascending) {\n        return quoteA.id > quoteB.id ? 1 : -1;\n      } else {\n        return quoteA.id < quoteB.id ? 1 : -1;\n      }\n    });\n  };\nconst QuoteList = (props) => {\n\n  const history = useHistory();\n  const location = useLocation();\n  console.log(location);\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\")===\"asc\";\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n     \n  const changeSortingHandler = ()=>{\n    \n    history.push(\"/quotes?sort=\"+(isSortingAscending?\"desc\":\"asc\"));\n    \n\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending?\"descending\":\"ascending\"}</button>\n      </div>\n      <ul className={classes.list}>\n        {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import QuoteList from \"../components/quotes/QuoteList\";\r\nimport { useState, useRef } from \"react\";\r\nimport './style.css';\r\n\r\n\r\n\r\nconst DUMMY_DATA = [\r\n  { id: \"q1\", author: \"Sam\", text: \"Learning React is fun!\" },\r\n  { id: \"q2\", author: \"Samsam\", text: \"Learning React is fun!\" },\r\n  \r\n];\r\n\r\n\r\nconst AllQuotes = ()=>{\r\n \r\n    return <QuoteList quotes={DUMMY_DATA} />;\r\n}\r\n\r\nexport default AllQuotes;","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useState, useRef } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);  \n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  \n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n     \n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n    setIsEntering(false);\n    \n    \n  }\n  const focusHandler = () => {\n    return setIsEntering(false);\n    \n  };\n  const finishEnteringHandler = ()=>{\n  \n    return setIsEntering(true);\n  }\n\n  return (\n    <> \n      <Prompt when={isEntering} message={(location)=>{return \"Want to leave tha page empty?\"}}/>\n      <Card>\n        <form className={classes.form} onSubmit={submitFormHandler} onFocus={focusHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishEnteringHandler} className=\"btn\" >Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst NewQuote = () => {\r\n\r\n\r\n  const history = useHistory();\r\n  const addQuoteHandler = (quote) => {\r\n    console.log(quote);\r\n    history.push(\"./quotes\");\r\n    \r\n  };\r\n\r\n\r\n  return <QuoteForm onAddQuote={addQuoteHandler} />;\r\n};\r\n\r\nexport default NewQuote;\r\n","import { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useParams, Route, Link } from \"react-router-dom\";\r\nimport {Fragment} from \"react\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\n\r\n\r\n\r\nconst DUMMY_DATA = [\r\n  { id: \"q1\", author: \"Sam\", text: \"Learning React is fun!\" },\r\n  { id: \"q2\", author: \"Samsam\", text: \"Learning React amazingly is fun!\" },\r\n];\r\n\r\n\r\nconst QuoteDetails = () => {\r\n    const params = useParams();\r\n    const quote = DUMMY_DATA.find(quote=>quote.id===params.quotaId);\r\n    if(!quote) {\r\n      return <p>No quote</p>\r\n    }\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote auhtor={quote.author} text={quote.text} />\r\n      <Route path={`/quotes/${params.quotaId}`} exact>\r\n        <div className=\"centered\">\r\n          <Link to={`/quotes/${params.quotaId}/comments`} className=\"btn--flat\">\r\n            Load comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n\r\n      <Route path={`/quotes/${params.quotaId}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetails;\r\n","import { NavLink } from \"react-router-dom\";\r\nimport classes from \"./MainNavigation.module.css\";\r\n\r\n\r\n\r\nconst MainNavigation=()=>{\r\n    return (\r\n      <header className={classes.header}>\r\n        <div className={classes.logo}>Great Quotas</div>\r\n        <nav className={classes.nav}>\r\n          <ul>\r\n            <li>\r\n              <NavLink to=\"/quotes\" activeClassName={classes.active}>\r\n                All Quotas\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/new-quote\" activeClassName={classes.active}>\r\n                Add a quota\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    );\r\n}\r\n\r\nexport default MainNavigation;","import MainNavigation from \"./MainNavigation\";\r\nimport { Fragment } from \"react\";\r\nimport classes from './Layout.module.css';\r\n\r\nconst Layout = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\n\r\n const NotFoundPage = () => {\r\n    return (\r\n        <div>\r\n            <h2>Page not found</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFoundPage;\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetails from \"./pages/QuoteDetails\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/:quotaId\">\n          <QuoteDetails />\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuote />\n        </Route>\n        <Route path=\"*\">\n          <NotFoundPage />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}